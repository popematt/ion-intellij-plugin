# GitHub Action Workflow for building a new commit to the primary repo branch and publishing a new release to beta.
#
# Workflow is triggered on pushes into master.
#
# Additional Docs:
# - GitHub Actions: https://help.github.com/en/actions

name: build-master
on:
  push:
    paths-ignore:
      - '*.md'
    branches:
      - master
jobs:

  # Build and test plugin and provide artifact.
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - run: df

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v2

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - run: df
      - uses: gradle/actions/setup-gradle@v4

      - run: df
      # Build artifact using buildPlugin Gradle task
      - name: Build Plugin
        run: ./gradlew buildPlugin

      - run: df
      - name: Get Product Versions
        id: get-products
        run: |
          PRODUCTS="$(./gradlew printProductsReleases -q | jq -cnR '[inputs | select(length > 0)]')"
          echo "products=$PRODUCTS"
          echo "products=$PRODUCTS" >> "$GITHUB_OUTPUT"

    outputs:
      products: ${{ steps.get-products.outputs.products }}

  verify:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        product: ${{ fromJSON(needs.build.outputs.products) }}
    steps:
      - run: df
      - uses: actions/checkout@v4
      - run: df
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
      - run: df

      # Cache Gradle dependencies
      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      # Cache Gradle Wrapper
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - run: df

      # Don't set up gradle here. We've already verified the gradle wrapper in the previous job.

      # Run intellij:verifyPlugin task.
      - name: Verify Plugin
        run: ./gradlew verifyPlugin -PverifyPlugin="${{ matrix.product }}"

  publish-beta:
    needs: verify
    runs-on: ubuntu-latest
    if: github.repository == 'amazon-ion/ion-intellij-plugin'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
      - uses: gradle/actions/setup-gradle@v4
      # Publish plugin to beta channel
      - name: Publish Beta Plugin
        env:
          PUBLISH_TOKEN: ${{ secrets.JETBRAINS_TOKEN }}
          PUBLISH_CHANNEL: beta
        run: ./gradlew --stacktrace publishPlugin

      # Upload plugin artifact to make it available in the next jobs
      - name: Upload artifact
        if: github.repository == 'amazon-ion/ion-intellij-plugin'
        uses: actions/upload-artifact@v4
        with:
          name: plugin-artifact
          path: ./build/distributions/
